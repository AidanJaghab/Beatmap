name: EDM Events Scraper

on:
  schedule:
    - cron: '0 6 * * *'  # Run daily at 6:00 AM UTC
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Chrome + matching ChromeDriver
  run: |
    sudo apt-get update
    sudo apt-get install -y wget unzip jq

    # Install Chrome
    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    sudo apt install -y ./google-chrome-stable_current_amd64.deb

    # Get Chrome version
    CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+\.\d+')
    MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d'.' -f1)

    # Fetch matching ChromeDriver from Google's Chrome-for-Testing API
    DRIVER_URL=$(curl -s https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json | \
      jq -r --arg version "$MAJOR_VERSION" '
        .channels.Stable.downloads.chromedriver[] 
        | select(.platform == "linux64") 
        | .url')

    echo "âœ… Installing ChromeDriver from $DRIVER_URL"
    wget -O chromedriver.zip "$DRIVER_URL"
    unzip chromedriver.zip
    sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
    sudo chmod +x /usr/local/bin/chromedriver

          
          # Verify versions
          google-chrome --version
          chromedriver --version

      - name: Install Python dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt


      - name: Run scraper
        working-directory: backend
        run: |
          python scraper.py

      - name: Pull latest changes with rebase
        run: git pull --rebase origin main

      - name: Commit and push EDM events data
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add backend/data/latest_events.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update EDM events data"
            git push origin main
